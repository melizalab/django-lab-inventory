# Generated by Django 5.1.4 on 2025-08-11 18:13
import django.db.models.deletion
from django.db import migrations, models


def migrate_accounts_forward(apps, schema_editor):
    """
    Migrate existing single account ForeignKey relationships
    to ManyToMany relationships through OrderAccount
    """
    Order = apps.get_model("inventory", "Order")
    OrderAccount = apps.get_model("inventory", "OrderAccount")

    for order in Order.objects.all():
        if order.account:
            # Create OrderAccount instance instead of using .add()
            OrderAccount.objects.create(order=order, account=order.account)


def migrate_accounts_reverse(apps, schema_editor):
    """
    Reverse migration: take the first account from through model
    and set it as the ForeignKey
    """
    Order = apps.get_model("inventory", "Order")
    OrderAccount = apps.get_model("inventory", "OrderAccount")

    for order in Order.objects.all():
        first_order_account = OrderAccount.objects.filter(order=order).first()
        if first_order_account:
            order.account = first_order_account.account
            order.save()


class Migration(migrations.Migration):
    dependencies = [
        ("inventory", "0014_remove_order_placed_by_order_requested_by"),
    ]

    operations = [
        # Step 1: Create the through model FIRST
        migrations.CreateModel(
            name="OrderAccount",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.account",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.order",
                    ),
                ),
            ],
            options={
                "db_table": "inventory_order_accounts",
                "ordering": ["account__code"],
                "unique_together": {("order", "account")},
            },
        ),
        # Step 2: Add the new ManyToMany field with through parameter
        migrations.AddField(
            model_name="order",
            name="accounts",
            field=models.ManyToManyField(
                blank=True,
                related_name="orders",
                through="inventory.OrderAccount",  # Specify the through model
                to="inventory.Account",
            ),
        ),
        # Step 3: Migrate data from ForeignKey to through model
        migrations.RunPython(
            migrate_accounts_forward,
            migrate_accounts_reverse,
        ),
        # Step 4: Remove the old ForeignKey field
        migrations.RemoveField(
            model_name="order",
            name="account",
        ),
    ]
